                                                                                                               URlShortern
Project name :- URLShortern

Description :-

1) 
*)  The original URL is :-https://www.django-rest-framework.org/api-guide/viewsets/    --> this is the original  url of django restframework Api .

*)  The Shortern URL is :-  http://127.0.0.1:8000/pqrp5n     --> this is the shortern url of the original  django restframework Api .

2)
*)  The original URL is :- https://getbootstrap.com/docs/4.5/components/toasts/   --> this is the original  url of Bootstrap toasts .

*)  The Shortern URL is :-   https://127.0.0.1:8000/zsniqe     -->  this is the shortern url of the original  Bootstrap toasts
 
3)
*)The original URL is :- https://getbootstrap.com/docs/4.5/components/forms/#form-controls     --> this is the original  url of Bootstrap form controlls .

*)  The Shortern URL is :-   https://127.0.0.1:8000/uh3r55  -->  this is the shortern url of the original  Bootstrap controlls.

Database Engine :- SQlite 3

What is SQLite..?

SQLite is a software library that provides a relational database management system. The lite in SQLite means lightweight in terms of setup, database administration, and required resources.

SQLite has the following noticeable features: self-contained, serverless, zero-configuration, transactional.

Serverless

Normally, an RDBMS such as MySQL, PostgreSQL, etc., requires a separate server process to operate. The applications that want to access the database
 server use TCP/IP protocol to send and receive requests. This is called client/server architecture.

Self-Contained :- 

SQLite is self-contained means it requires minimal support from the operating system or external library. This makes SQLite usable in any environment especially in embedded devices like iPhones, Android phones, game consoles, handheld media players, etc.

SQLite is developed using ANSI-C. The source code is available as a big sqlite3.c and its header file sqlite3.h. If you want to develop an application that uses SQLite, you just need to drop these files into your project and compile it with your code.

Zero-configuration :- 

Because of the serverless architecture, you don’t need to “install” SQLite before using it. There is no server process that needs to be configured, started, and stopped.

In addition, SQLite does not use any configuration files.

Transactional :-

All transactions in SQLite are fully ACID-compliant. It means all queries and changes are Atomic, Consistent, Isolated, and Durable.

SQLite distinctive features :-


SQLite uses dynamic types for tables. It means you can store any value in any column, regardless of the data type.

SQLite allows a single database connection to access multiple database files simultaneously. This brings many nice features like joining tables in different databases or copying data between databases in a single command.

SQLite is capable of creating in-memory databases that are very fast to work with.

In other words, all changes within a transaction take place completely or not at all even when an unexpected situation like application crash, power failure, or operating system crash occurs.
*) For this urlshortern project i am using the database engine was SQlite3 . why this one i was used because of the sqlite3 database was a default     ->
 --> database for  python programing language and django framework. and it support the esay way of data dumping from sqlite database to postgresql 
or MySql and another databases. and the sqlite3 database was a user friendlydatabase..
